@model IPagedList<WebParser.authors>
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@using PagedList.Mvc;
@using PagedList;
@{
    ViewBag.Title = "Авторы";
}
<!DOCTYPE html>

<html>
<body>
    <div class="container-fluid">
        <div class="row justify-content-center">
            <div class="col-md-10">
                <a href="/Author/Index" class="col-form-label">
                    <h3 class="text-center mt-2">Авторы</h3>
                    <hr />
                </a>
                @if (ViewData["messageType"] != null && ViewData["message"] != null)
                {
                    <div class="alert alert-@ViewData["messageType"] alert-dismissible text-center">
                        <button type="button" class="close" data-dismiss="alert">&times;</button>
                        <b>@ViewData["message"]</b>
                    </div>
                }

            </div>
        </div>
        <div class="row">
            <div class="col-md-3">
                @if (ViewData["Update"] != null && ViewData["Initials"] != null)
                {
                    <h3 class="text-center text-info">
                        Изменить автора
                    </h3>
                }
                else
                {
                    <h3 class="text-center text-info">
                        Добавить автора
                    </h3>
                }
                <form action="" method="post" class="needs-validation" name="main" novalidate>
                    <div class="form-group">
                        <div class="form-group">
                            <input type="text" name="authorInput" class="form-control" placeholder="Введите полное имя" value="@ViewData["Initials"]" maxlength="40" required />
                            <div class="invalid-feedback">
                                Введите имя, не превышающее 40 символов
                            </div>
                        </div>
                        @if (ViewData["Update"] != null && ViewData["Initials"] != null)
                        {
                            <input type="submit" name="editAuthor" class="btn btn-success btn-block" value="Изменить" formaction="@Url.Action("Update", "Author", new { authorInput = Request.QueryString["authorInput"], idInput = ViewData["Id"]})" />
                        }
                        else
                        {
                            <input type="submit" name="addAuthor" class="btn btn-primary btn-block" value="Добавить" formaction="Create" />
                        }
                    </div>
                </form>
                <form action="Index">
                    <div class="form-group">
                        <input class="form-control mr-lg-3" name="searchText" type="search" placeholder="Поиск по имени" aria-label="Search">
                    </div>
                    <div class="form-group">
                        <button class="btn btn-warning btn-block" type="submit">Найти</button>
                    </div>
                </form>
                <a class="btn btn-warning btn-block" href="@Url.Action("Export", "Author")">Экспорт в Excel</a>
            </div>
            <div class="col-md-8">
                <h3 class="text-center text-info">Записи в базе данных</h3>
                <table class="table table-hover table-dark table-bordered table-responsive-md">
                    <thead class="thead-dark">
                        <tr>
                            <th class="text-center">
                                <h3>Имя Автора</h3>
                            </th>
                            <th class="text-center">
                                <h3>Действия</h3>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    <h5 class="text-center mt-2">@Html.DisplayFor(modelItem => item.initials)</h5>
                                </td>
                                <td>
                                    <div class="row">
                                        <div class="col">
                                            <button href="#" onclick="location.href='@Url.Action("Edit", "Author", new {id = item.id})'" class="btn btn-warning btn-block mt-2">Изменить</button>
                                        </div>
                                        <div class="col">
                                            <button href="#" onclick="location.href='@Url.Action("Delete", "Author", new {id = item.id})'" class="btn btn-danger btn-block mt-2">Удалить</button>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                @Html.PagedListPager(Model, i => Url.Action("", "Author/", new { i, searchText = Request.QueryString["searchText"] }))

            </div>
        </div>
    </div>

    <script>

        var form = document.querySelector('.needs-validation');

        form.addEventListener('submit', function (event) {

            if (!form.checkValidity()) {
                event.preventDefault();
                event.stopPropagation();
            }
            form.classList.add('was-validated');
        })
    </script>


</body>
</html>